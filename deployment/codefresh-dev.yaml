version: '1.0'
stages:
- prepare
- build
- deploy
- publish
steps:
  neuroglancer_deploy_clone:
    title: Clone neuroglancer-deployment repository
    type: git-clone
    stage: prepare
    repo: 'MetaCell/neuroglancer-deployment'
    revision: 'master'
    git: github
    working_directory: .

  post_main_clone:
    title: Post main clone
    type: parallel
    stage: prepare
    steps:
    - title: Cloning cloud-harness repository...
      type: git-clone
      stage: prepare
      repo: https://github.com/MetaCell/cloud-harness.git
      revision: '${{CLOUDHARNESS_BRANCH}}'
      working_directory: .
      git: github

  prepare_deployment:
    title: Prepare helm chart
    image: python:3.9.10
    stage: prepare
    working_directory: .
    commands:
    - cp -r neuroglancer-deployment/* . || true
    - echo $(date) > $(pwd)/applications/neuroglancer/current_date
    - bash cloud-harness/install.sh
    - harness-deployment cloud-harness . -d ${{DOMAIN}} -r ${{REGISTRY}} -rs ${{REGISTRY_SECRET}}
      -n ${{NAMESPACE}} --write-env -e dev -i neuroglancer
    - cat deployment/.env >> ${{CF_VOLUME_PATH}}/env_vars_to_export
    - cat ${{CF_VOLUME_PATH}}/env_vars_to_export
    
  prepare_deployment_view:
    commands:
    - helm template ./deployment/helm --debug -n ${{NAMESPACE}}
    environment:
    - ACTION=auth
    - KUBE_CONTEXT=${{NAMESPACE}}
    image: codefresh/cfstep-helm:3.6.2
    stage: prepare
    title: View helm chart

  build_application_images:
    type: parallel
    stage: build
    steps:
      neuroglancer:
        type: build
        stage: build
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/neuroglancer/
        - NG_BRANCH_NAME=${{NG_BRANCH_NAME}}
        - FORCE_CLONE=${{FORCE_CLONE}}
        image_name: neuroglancer/neuroglancer
        title: Neuroglancer Build
        working_directory: ./neuroglancer-deployment/applications/neuroglancer
        tag: '${{NEUROGLANCER_TAG}}'

  deployment:
    stage: deploy
    type: helm
    title: Install Neuroglancer helm chart
    arguments:
      helm_version: 3.6.2
      chart_name: ./deployment/helm
      release_name: '${{NAMESPACE}}'
      kube_context: '${{CLUSTER_NAME}}'
      namespace: '${{NAMESPACE}}'
      chart_version: '${{CF_BUILD_ID}}'
      cmd_ps: --wait --timeout 600s --create-namespace
      custom_value_files:
      - ./neuroglancer-deployment/applications/neuroglancer/deploy/values-dev.yaml
      custom_values: []
