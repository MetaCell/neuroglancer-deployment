version: '1.0'
stages:
- prepare
- build
- deploy
- publish
steps:
  main_clone:
    title: Clone repository
    type: git-clone
    stage: prepare
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_BRANCH}}'
    git: github

  post_main_clone:
    title: Post main clone
    type: parallel
    stage: prepare
    steps:
    - title: Cloning cloud-harness repository...
      type: git-clone
      stage: prepare
      repo: https://github.com/MetaCell/cloud-harness.git
      revision: '${{CLOUDHARNESS_BRANCH}}'
      working_directory: .
      git: github

  prepare_deployment:
    title: Prepare helm chart
    image: python:3.9.10
    stage: prepare
    working_directory: .
    commands:
    - bash cloud-harness/install.sh
    - harness-deployment cloud-harness . -d ${{DOMAIN}} -r ${{REGISTRY}} -rs ${{REGISTRY_SECRET}}
      -n ${{NAMESPACE}} --write-env -e dev -i neuroglancer
    - cat deployment/.env >> ${{CF_VOLUME_PATH}}/env_vars_to_export
    - cat ${{CF_VOLUME_PATH}}/env_vars_to_export

  prepare_deployment_view:
    commands:
    - helm template ./deployment/helm --debug -n ${{NAMESPACE}}
    environment:
    - KUBE_CONTEXT=${{NAMESPACE}}
    image: codefresh/cfstep-helm:3.6.2
    stage: prepare
    title: View helm chart

  build_container_image:
    title: Build Container Image
    type: parallel
    stage: build
    steps:
      neuroglancer:
        type: build
        stage: build
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - BRANCH_NAME=develop
        image_name: neuroglancer
        title: Neuroglancer
        working_directory: ./applications/neuroglancer/
        tag: '${{NEUROGLANCER_TAG}}'
        when:
          condition:
            any:
              buildDoesNotExist: includes('${{NEUROGLANCER_TAG_EXISTS}}', '{{NEUROGLANCER_TAG_EXISTS}}')
                == true
              forceNoCache: includes('${{NEUROGLANCER_TAG_FORCE_BUILD}}', '{{NEUROGLANCER_TAG_FORCE_BUILD}}')
                == false

  deployment:
    stage: deploy
    type: helm
    working_directory: ./${{CF_REPO_NAME}}
    title: Installing chart
    arguments:
      helm_version: '3.9.0'
      chart_name: ./deployment/helm
      release_name: '${{NAMESPACE}}'
      kube_context: '${{CLUSTER_NAME}}'
      namespace: '${{NAMESPACE}}'
      chart_version: '${{CF_BUILD_ID}}'
      cmd_ps: --wait --timeout 600s --create-namespace
      custom_value_files:
      - ./deployment/helm/values.yaml
      custom_values: []

  # publish:
  #   type: parallel
  #   stage: publish
  #   steps:
  #     publish_neuroglancer:
  #       stage: publish
  #       type: push
  #       title: Publish Neuroglancer
  #       candidate: '${{REGISTRY}}/neuroglancer/neuroglancer:${{NEUROGLANCER_TAG}}'
  #       tags:
  #       - '${{DEPLOYMENT_PUBLISH_TAG}}'
  #       registry: '${{REGISTRY_PUBLISH_URL}}'
  #   when:
  #     condition:
  #       all:
  #         whenVarExists: includes("${{DEPLOYMENT_PUBLISH_TAG}}", "{{DEPLOYMENT_PUBLISH_TAG}}")
  #           == false
